1) design patterns atleast 4
2) use of enums
3) use of switch cases with strings
4) use of ternary operators
5) Write custom exception
6) Use comparator and comparable interfaces


1) Persist data in excel sheet --- done
2) Adobe Analytics data into SFTP how? Learning adobe analytics and integrations -- Partly done
3) Writing batch jobs in java -- Not done
4) Date comparisions an util classes --No done
5) Sending emails -- Not Done


Spoke to Anoop:
1) A decision whether we want to use Spring batch and hibernate together (ORM) approach
	a) What is better than which?
	b) If spring batch has a ready made API that covers our concern of fetching data from SFTP and dump to MYSQL
	c) If spring batch has Email related API's
2) Setup MYSQL Database in your machine and we will treat that as server. Developer version
	a) ErrorHandlings
3) Planning for stories
	a) Taking dump from SFTP
	b) Pushing to DB
	c) Querying dB is staright forward with no joins etc
	d) Sending Emails Asynchronously ormultithreading emails

Explore batch jobs -- lunch
connect SFTP from spring batch and dump to dB


org.springframework.batch.item.mail.javamail
Class - MimeMessageItemWriter


Potential Issues:
Duplicate records. Assets can be duplicately downloaded, will that be handled in adobe anaytics batch job?



	






